{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-01-17T06:23:43.367Z",
    "end": "2025-01-17T06:23:53.027Z",
    "duration": 9660,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "554137fd-b0cb-488f-8cce-277d429a5a4b",
      "title": "",
      "fullFile": "cypress\\e2e\\assignment\\17012025\\fileUpload.cy.js",
      "file": "cypress\\e2e\\assignment\\17012025\\fileUpload.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6616aeb0-d3e1-4b61-a134-67d0a072c088",
          "title": "File Upload Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Uploads a file successfully",
              "fullTitle": "File Upload Test Uploads a file successfully",
              "timedOut": null,
              "duration": 7343,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Visit the file upload page\ncy.visit('https://practice.expandtesting.com/upload');\n// Define the file path (relative to the cypress/fixtures folder)\nconst filePath = 'cypress/fixtures/testUploadFile.txt'; // Ensure this file is inside the 'cypress/fixtures' folder\n// Verify file content before upload (optional)\n//cy.readFile(`${filePath}`).should('exist').and('include', 'test upload');\ncy.readFile(`${filePath}`).its('name').should('eq', 'testUploadFile');\n// Upload the file\ncy.get('input[type=\"file\"]').selectFile(`${filePath}`);\n// Submit the upload (if there's a button to submit)\ncy.get('button[type=\"submit\"]').click();\n// Verify the upload success message or behavior\ncy.contains('File uploaded successfully').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected undefined to equal 'testUploadFile'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected undefined to equal 'testUploadFile'\n    at Context.eval (webpack://cypress-demo/./cypress/e2e/assignment/17012025/fileUpload.cy.js:20:45)",
                "diff": null
              },
              "uuid": "532d679a-bc6d-4a75-9793-2e1523b014a8",
              "parentUUID": "6616aeb0-d3e1-4b61-a134-67d0a072c088",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "532d679a-bc6d-4a75-9793-2e1523b014a8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "embeddedScreenshots": true,
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}